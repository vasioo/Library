@using Library.Models.BaseModels;
@model Notification
@{
    string GetTimeDisplay(DateTime postDate)
    {
        TimeSpan timeDifference = DateTime.Now - postDate;

        double seconds = Math.Floor(timeDifference.TotalSeconds);
        double minutes = Math.Floor(timeDifference.TotalMinutes);
        double hours = Math.Floor(timeDifference.TotalHours);
        double days = Math.Floor(timeDifference.TotalDays);

        string displayString = "";

        if (days > 365 || (days > 7 && postDate.Year != DateTime.Now.Year))
        {
            displayString = postDate.ToString("yyyy-MM-dd HH:mm:ss");
        }
        else if (days > 7)
        {
            displayString = postDate.ToString("MMMM d");
        }
        else if (days >= 1)
        {
            displayString = days == 1 ? "1 day ago" : $"{(int)days} days ago";
        }
        else if (hours >= 1)
        {
            displayString = hours == 1 ? "1 hour ago" : $"{(int)hours} hours ago";
        }
        else if (minutes >= 1)
        {
            displayString = minutes == 1 ? "1 minute ago" : $"{(int)minutes} minutes ago";
        }
        else
        {
            displayString = seconds == 1 ? "1 second ago" : $"{(int)seconds} seconds ago";
        }

        return displayString;
    }
}
<style>
    .link-to-post, .link-to-post:hover, .link.link-to-post:active {
        text-decoration: none;
        color: black;
    }
</style>
<div class="row justify-content-center pt-4">
    <div class="card col-6 m-0 p-0">
            <div class="card-body">
                <div class="card-title d-flex align-items-center">
                    <div class="row">
                        <div class="col-auto font-weight-bold h5 m-0 p-0">@Model.Sender @Model.Content</div>
                    </div>
                </div>
                <p class="card-text text-left">  @GetTimeDisplay(Model.DateOfSending)</p>
            </div>
    </div>
</div>