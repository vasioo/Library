@using Library.Models.ViewModels;
@using System.Web;
@using HtmlAgilityPack;
@model SearchViewModel

<style>
    .searcher-catalog {
        font-size: 1.4em;
        color: black;
        position: relative;
        padding: 10px 0;
        margin: 0;
        font-weight: 500;
    }

        .searcher-catalog:hover {
            text-decoration: underline !important;
            text-decoration-color: #00D1D1 !important;
        }

        .searcher-catalog.active {
            text-decoration: underline !important;
            color: #00D1D1 !important;
        }

    .searcher-main-div-for-catalog {
        padding: 0;
        margin: 0;
    }

    .btn,
    .btn:active,
    .btn:focus,
    .btn:hover {
        box-shadow: none !important;
        border: none !important;
        outline: none !important;
    }

    .blog-card {
        display: flex;
        flex-direction: row;
        margin-bottom: 20px;
    }

        .blog-card img {
            width: 12.5em;
            height: auto;
            object-fit: cover;
        }

        .blog-card .card-body {
            flex-grow: 1;
            padding: 20px;
        }

        .blog-card .card-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .blog-card .card-date {
            font-size: 14px;
            color: #999;
        }

        .blog-card .card-content {
            margin-top: 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

    .count-for-books {
        padding: 0.4rem 0.4rem 0px 2rem;
    }

    .custom-container {
        background-color: #ffffff;
        box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.5);
        border-radius: 10px;
        padding: 20px;
    }

    .search-page {
        background: url('/images/book-shower-bg.svg');
        background-size: cover;
    }

    .doc-item h5, p {
        text-decoration: none;
    }

    a {
        text-decoration: none !important;
        color: black !important;
    }

    .my-card {
        padding: 1.5rem;
        transition: transform 0.3s ease-in-out;
    }

        .my-card:hover {
            transform: scale(1.03);
        }
</style>
@{
    string TruncateAndAppend(string content, int maxChars)
    {
        if (string.IsNullOrEmpty(content))
        {
            return string.Empty;
        }

        content = content.Replace("&nbsp;", " ");

        var doc = new HtmlDocument();
        doc.LoadHtml(Html.Raw(content).ToString());

        var paragraphs = doc.DocumentNode.SelectNodes("//p");

        if (paragraphs == null || !paragraphs.Any())
        {
            return string.Empty;
        }

        var textContent = string.Join(" ", paragraphs.Select(p => p.InnerText));

        var sentences = textContent.Split(new[] { '.', '!', '?' }, StringSplitOptions.RemoveEmptyEntries);

        var truncatedSentences = new List<string>();

        foreach (var sentence in sentences)
        {
            var random = new Random();
            var randomLength = random.Next(70, 81);
            var truncatedSentence = sentence.Length <= randomLength ? sentence : sentence.Substring(0, randomLength) + "...";

            truncatedSentences.Add(truncatedSentence);
        }

        return string.Join(" ", truncatedSentences);
    }

}
<div class=" pt-3 search-page">
    <div class=" container custom-container">
        <div class="row">
            <div class="h1">Търсачка на книги</div>
        </div>
        <div class="row pt-3">
            <div class="col col-lg-1 searcher-main-div-for-catalog text-center">
                <a class="btn @(Model.searchCategory != "Documents" && Model.searchCategory != "Subjects" ? "active" : "") searcher-catalog"     href="@Url.Action("Search", "Home", new { searchCategory = "", inputValue = Model.inputValue })">Книги</a>
            </div>
            <div class="col col-lg-1 searcher-main-div-for-catalog text-center">
                <a class="btn @(Model.searchCategory == "Documents" ? "active" : "") searcher-catalog" href="@Url.Action("Search", "Home", new { searchCategory = "Documents", inputValue = Model.inputValue })">Автори</a>
            </div>
            <div class="col col-lg-1 searcher-main-div-for-catalog text-center">
                <a class="btn @(Model.searchCategory == "Subjects" ? "active" : "") searcher-catalog" href="@Url.Action("Search", "Home", new { searchCategory = "Subjects", inputValue = Model.inputValue })">Жанр</a>
            </div>
        </div>
        <div class="row justify-content-center justify-content-lg-start">
            <form method="get" action="@Url.Action("Search", "Home")" class="row g-2 align-items-center">
                <div class="col-8 col-lg-6">
                    <input class="form-control fs-5" type="text" name="inputValue" placeholder="Въведи име..." value="@Model.inputValue">
                </div>
                <div class="col-3 col-lg-1 text-center">
                    <button type="submit" class="btn btn-success fs-5">Търси</button>
                </div>
                <input class="" type="hidden" name="searchCategory" value="@Model.searchCategory" />
            </form>
        </div>
        <div id="items-show-container" class="py-3">
            @if (Model.searchCategory != "Documents" && Model.searchCategory != "Subjects")
            {
                @foreach (var item in Model.Books.OrderBy(x=>x.Name))
                {
                    var imageUrl = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/image-for-book-{item.Id}.png";
                    var formattedDate = item.DateOfBookCreation.ToString("dd/MM/yyyy");
                    <div class="row">
                        <div class="col-12 col-xxl-9">
                            <div class="blog-card">
                                <div class="col-lg-3 align-self-center">
                                    <a href="@Url.Action("BookPage", "Home", new { bookId = item.Id })" class="main-link">
                                        <img src="@imageUrl" alt="Blog Image">
                                    </a>
                                </div>
                                <div class="card-body col-lg-9">
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="card-date">@formattedDate г.</p>
                                    <p class="d-flex">@Truncate(item.Description, 100)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            @if (Model.searchCategory == "Documents")
            {
                if (User.IsInRole("Admin") || User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                {
                    <div class="row">
                        <a class="col-12 btn btn-success text-white fs-5" href="/Librarian/AddDocument">
                            Добави Документ
                        </a>
                    </div>
                }

                @foreach (var item in Model.BlogPosts)
                {
                    var truncatedContent = TruncateAndAppend(item.Content, 80);
                    var imageUrl = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/main-image-for-document-{item.Id}.png";
                    <div class="row">
                        <div class="col-12 col-xxl-9">
                            <div class="blog-card justify-content-between my-card">
                                <a href="/Home/DocumentPage?id=@item.Id" class="doc-item col-12 d-flex align-items-center">
                                    <div class="col-lg-3 col-5 text-center">
                                        <img src="@imageUrl" alt="Blog Image" class="img-fluid">
                                    </div>
                                    <div class="col-lg-9 col-7">
                                        <div class="card-body">
                                            <h5 class="card-title">@item.Title</h5>
                                            <p class="card-date">@item.DateOfCreation</p>
                                            <p class="d-flex">@truncatedContent</p>
                                        </div>
                                    </div>
                                </a>
                                @if (User.IsInRole("SuperAdmin"))
                                {
                                    <div class="">
                                        <a href="@Url.Action("EditDocument", "Librarian", new { id=item.Id })" class="btn btn-warning m-2">Редакция</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }

            @if (Model.searchCategory == "Subjects")
            {
                <ul>
                    @foreach (var item in Model.Subjects)
                    {
                        <li class="pt-1">
                            <div class="row">
                                <div class="fs-4"><a><strong>@item.Subject</strong></a></div>
                                @if (@item.AmountOfBooksWithinThatSubject == 1)
                                {
                                    <div class="fs-5 count-for-books">  @item.AmountOfBooksWithinThatSubject налична книга</div>
                                }
                                else
                                {
                                    <div class="fs-5 count-for-books">  @item.AmountOfBooksWithinThatSubject налични книги</div>
                                }

                            </div>
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="row justify-content-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link text-white" href="@Url.Action("Search", "Home", new { searchCategory = Model.searchCategory, inputValue = Model.inputValue, page = i })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
@functions
{
    string Truncate(string value, int maxLength)
    {
        if (value.Length <= maxLength)
        {
            return value;
        }
        else
        {
            return value.Substring(0, maxLength) + "...";
        }
    }
}