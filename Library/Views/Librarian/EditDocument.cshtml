@using Library.Models.BaseModels;
@model Document

<style>
    label {
        font-size: 2em;
        font-weight: 700;
    }
</style>
<div class="edit-document-page">
    <div class="container mt-5">
        <div class="row">
            <div class="col-10 col-md-12">
                <form asp-action="EditDocumentPost" asp-controller="Librarian" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="Id" value="@Model.Id" />
                    <input type="hidden" asp-for="DateOfCreation" value="@Model.DateOfCreation" />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col-1"></div>
                        <h1 class="text-center py-2 col-10">Промяна на документ</h1>
                        <a class="col-1 align-self-center" href="#" data-toggle="modal" data-target="#infoModal"><i class="fa-regular fa-circle-question fa-2xl"></i></a>
                        <hr class="py-1" style="color:#00d1d1" />
                    </div>
                    <div class="form-group pt-3">
                        <label for="title">Заглавие</label>
                        <input asp-for="Title" id="title" class="form-control" value="@Model.Title" required />
                        <div class="invalid-feedback">Заглавието не може да е празно.</div>
                    </div>
                    @{
                        var content = Html.Raw(Model.Content).ToString();
                        var contentOfItem = @System.Net.WebUtility.HtmlDecode(System.Text.RegularExpressions.Regex.Replace(content, "<.*?>", string.Empty));
                    }
                    <div class="form-group pt-3">
                        <label for="tiny">Основна информация</label>
                        <textarea id="tiny" class="form-control" style="width: 100%" rows="10" asp-for="Content" required>@contentOfItem</textarea>
                        <div class="invalid-feedback">Основната информация не може да е празна.</div>
                    </div>

                    @{
                        var link = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/main-image-for-document-{Model.Id}.png";
                    }

                    <div class="form-group mt-3 row justify-content-center">
                        <div class="col-10 col-lg-5 col-xl-2 p-0 m-0">
                            <label class="form-label col text-center" for="blog-image-1">Снимка на корицата</label>
                            <div class="upload-input">
                                <input type="file" id="blog-image-1" name="blogImage" class="image-upload" accept=".png, .jpg, .jpeg" multiple="multiple" max="1">
                                <img class="uploaded-image" src="@link">
                                <label for="blog-image-1" class="text-center content">
                                    <span class="text">
                                        <span class="mb-15 plus-icon"><i class="fa fa-plus"></i></span>
                                    </span>
                                </label>
                                <div class="invalid-feedback">Моля качете снимка.</div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-3">
                        <button type="submit" class="btn btn-primary col-12 fs-5">Запази промените</button>
                    </div>
                    <div class="form-group pt-4">
                        <button id="@Model.Id" id="submit-btn" class="btn btn-danger deleteBlogPostButton fs-5 col-12">Изтрий документа</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var elements = document.getElementsByClassName('deleteBlogPostButton');

        Array.from(elements).forEach(function (element) {
            element.addEventListener('click', function (event) {
                event.preventDefault();

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this blog!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Delete!'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        var id = element.getAttribute('id');

                        var antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                        fetch('/Librarian/DeleteDocumentPost', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'RequestVerificationToken': antiForgeryToken
                            },
                            body: 'id=' + id
                        })
                            .then(function (response) {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(function (data) {
                                var currentDomain = window.location.host
                                var updatedUrl = "https://" + currentDomain + "/Footer/Blog";

                                window.location.href = updatedUrl;

                            })
                            .catch(function (error) {
                                console.error('Fetch error:', error);
                            });
                    }
                });
            });
        });
    });

</script>