@using Library.Models.BaseModels;
@using Library.Models.Pagination;
@model PaginatedList<Book>
@{
    Layout = "~/Views/Shared/_LibrarianLayout.cshtml";
}

<div class="all-books">
    <div class="container">
        <div class="row pb-4">
            <a asp-controller="Librarian" asp-action="AddABook" class="btn btn-success">Add A Book</a>
        </div>
        <div id="book-filtering" class="row">
            <div>
                <form asp-action="AllBooksInformation" method="get">
                    <div class="form-actions no-color">
                        <p>
                            Find by string: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                            <input type="submit" value="Search" class="btn btn-default" /> |
                            <a asp-action="AllBooksInformation">Back to Full List</a>
                        </p>
                    </div>
                </form>
            </div>
        </div>

        <table class="table pt-3">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Author</th>
                    <th>Date of Creation</th>
                    <th>Available Items</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var book in Model)
                    {
                        <tr>
                            <td>@book.Name</td>
                            <td>@book.Author</td>
                            <td>@book.DateOfBookCreation.ToString("yyyy-MM-dd")</td>
                            <td>@book.AvailableItems</td>
                            <td class="row justify-content-between">
                                <a href="@Url.Action("EditBookInformation", "Librarian", new { bookId=book.Id })" class="btn btn-warning col-5" onclick="editBook(@book.Id)">Edit</a>
                                <a class="remove-book btn btn-danger col-5" id="@book.Id">Delete</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="ManageUsers"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="ManageUsers"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </div>
</div>